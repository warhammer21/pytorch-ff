name: Flask CI/CD Pipeline with Canary Deployment

on:
  push:
    branches:
      - canary-deployment

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          docker build -t flask-app:latest .
          docker images

      - name: Save Docker Image as Artifact
        run: |
          docker save flask-app:latest -o flask-app.tar

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v3
        with:
          name: flask-app-image
          path: flask-app.tar

      - name: Run Flask Docker Container
        run: |
          docker run -d --name flask_container -p 7011:7000 flask-app:latest

      - name: Install Locust
        run: pip install locust

      - name: Wait for Flask API to be Ready
        run: |
          for i in {1..10}; do
            curl -f http://localhost:7011/health && break || sleep 3
          done

      - name: Test Flask API before Load Test
        run: |
          curl -f http://localhost:7011/health || (docker logs flask_container && exit 1)

      - name: Run Locust Load Tests
        run: |
          locust -f locustfile.py --headless --users 10 --spawn-rate 2 --run-time 30s --host=http://localhost:7011

      - name: Stop Flask Docker Container
        run: docker stop flask_container

  model-health-check:
    runs-on: ubuntu-latest
    needs: ci

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v3
        with:
          name: flask-app-image

      - name: Load Docker Image
        run: |
          docker load -i flask-app.tar

      - name: Install ONNX Runtime
        run: pip install onnxruntime

      - name: Validate ONNX Model
        run: |
          docker run --rm -v $PWD/app:/app flask-app:latest python /app/validate_onnx.py || exit 1

  canary-deployment:
    runs-on: ubuntu-latest
    needs: model-health-check

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v3
        with:
          name: flask-app-image

      - name: Load Docker Image
        run: |
          docker load -i flask-app.tar

      - name: Build New Canary Image (Tagging Same Image)
        run: |
          docker tag flask-app:latest flask-app:canary
          docker images

      - name: Deploy New Canary Version
        run: |
          docker run -d --name canary_flask -p 7012:7000 flask-app:canary

      - name: Install Locust
        run: pip install locust

      - name: Test Canary Health Endpoint
        run: |
          curl -f http://localhost:7012/health || exit 1

      - name: Run Canary Load Tests
        run: |
          locust -f locustfile.py --headless --users 5 --spawn-rate 1 --run-time 15s --host=http://localhost:7012

      - name: Simulate Traffic Shift to Canary
        run: |
          echo "Simulating gradual traffic shift..."
          sleep 5
          echo "Canary is stable, proceeding with rollout!"

      - name: Cleanup
        run: docker stop canary_flask
